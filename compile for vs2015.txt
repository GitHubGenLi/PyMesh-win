1. 用git导出 PyMesh
   https://github.com/rickarkin/PyMesh-win.git
   CMake加载/CMakeList.txt
   
2. 下载anaconda，https://www.continuum.io/downloads
   注意，一定是 Python 2.7的版本，pymesh对3.x支持有问题
   安装完成后，Python、NumPy、SciPy都会自动安装好。


3. 准备依赖文件和库

   3.1 	用git导出 PyMesh的依赖文件
		https://github.com/rickarkin/PyMesh-win-Depends-VS2015.git

   3.2 	编译依赖文件中的一些库，都要求生成VS2015 x64版本的
		包括clipper\cork\qhull-master\tetgen\triangle
		普遍都是用CMake生成工程，然后编译即可；

   3.3 下载并解压缩eigen
       http://eigen.tuxfamily.org/index.php?title=Main_Page
	   
   3.4 下载并解压缩boost
       http://www.boost.org/

   3.5 下载并解压缩libigl
       http://libigl.github.io/libigl/
	   
   3.6 安装CGAL-4.7
	   注意安装过程中
			选中“GMP and MPFR precompiled libs”
			选择正确的32-bit或者64-bit
			要求将CGAL_DIR设定为环境变量  
	   用CMake为CGAL生成工程到/build路径，
	   
4. 用CMake生成PyMesh工程，要求是VS 2015 x64版本的
   即compile，会有一系列错误，
   普遍是找不到依赖文件的路径
   在CMake的search中挨个找到下面的参数进行设置
       
	设置Eigen_include_DIR到eigen的根目录
	设置CGAL_DIR到cgal/build，即前面3.6生成的工程路径，因为要用到其中的CGALConfig.cmake文件
	设置Boost_INCLUDE_DIR 为boost的路径
	设置SWIG_EXECUTABLE，即swig.exe的路径
    添加关于qhull的路径，QHULL_INCLUDE_DIR设置到qhull/src即可，QHULL_LIBRARY则使用qhull-master/build/release/qhullstatic.lib
	添加关于sparsehash的路径，SPARSEHASH_INCLUDE_DIRS使用sparsehash-master/src/windows
	
	添加关于cork的路径，CORK_INCLUDE_DIRS使用cork/src，CORK_LIBRARIES使用cork/build/Release/cork.lib
	添加关于TETGEN的路径
	添加关于Triangle的路径

正常的话，这时已经生成可以正常的generate了，之后直接在VC下编译即可



